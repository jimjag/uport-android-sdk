apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version


    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "com.android.support:support-annotations:$support_lib_version"

    api "com.github.walleth.kethereum:model:$kethereum_version"
    api "com.github.walleth.kethereum:crypto:$kethereum_version"
    api "com.github.walleth.kethereum:extensions:$kethereum_version"

    api project(":signer")
    api project(":did")
    api project(":ethr-did")
    api project(":jsonrpc")
    api project(":core")
    api project(":serialization")

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"

    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "com.android.support.test:runner:$test_runner_version"
    androidTestImplementation "com.android.support.test:rules:$test_runner_version"
    androidTestImplementation "com.android.support:appcompat-v7:$support_lib_version"
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

kotlin {
    experimental {
        coroutines "enable"
    }
}